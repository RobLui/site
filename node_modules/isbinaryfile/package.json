{
  "_from": "isbinaryfile@^3.0.0",
  "_id": "isbinaryfile@3.0.2",
  "_inBundle": false,
  "_integrity": "sha1-Sj6XTsDLqQBNP8bN5yCeppNopiE=",
  "_location": "/isbinaryfile",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "isbinaryfile@^3.0.0",
    "name": "isbinaryfile",
    "escapedName": "isbinaryfile",
    "rawSpec": "^3.0.0",
    "saveSpec": null,
    "fetchSpec": "^3.0.0"
  },
  "_requiredBy": [
    "/@angular/cli"
  ],
  "_resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-3.0.2.tgz",
  "_shasum": "4a3e974ec0cba9004d3fc6cde7209ea69368a621",
  "_shrinkwrap": null,
  "_spec": "isbinaryfile@^3.0.0",
  "_where": "/Users/louise/Documents/School/frontend_bram/site/node_modules/@angular/cli",
  "bin": null,
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Detects if a file is binary in Node.js. Similar to [Perl's `-B` switch](http://stackoverflow.com/questions/899206/how-does-perl-know-a-file-is-binary), in that: - it reads the first few thousand bytes of a file - checks for a `null` byte; if it's found, it's binary - flags non-ASCII characters. After a certain number of \"weird\" characters, the file is flagged as binary",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.13",
    "grunt-exec": "0.4.3",
    "grunt-release": "~0.6.0",
    "mocha": "^2.2.4"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "name": "isbinaryfile",
  "optionalDependencies": {},
  "peerDependencies": {},
  "scripts": {},
  "version": "3.0.2"
}
